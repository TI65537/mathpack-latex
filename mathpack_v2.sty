\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{mathpack_v2}[2024/08/07 mathpack: Advanced macros for display equation. version 2 !!!!]




\catcode`@=11%  @を文字と見なす




%  ファイルの読み込み

\newread\m@thpack@mathpackaux
\openin\m@thpack@mathpackaux=\jobname_mathpack.aux\relax%  auxファイルを読み込む

\ifeof\m@thpack@mathpackaux%  空でないなら読み込む
\else%
  \input\jobname_mathpack.aux\relax%
\fi

\closein\m@thpack@mathpackaux%  auxファイルを閉じる

\newwrite\m@thpack@mathpackaux%  auxファイルを書き込み用に開く
\immediate\openout\m@thpack@mathpackaux=\jobname_mathpack.aux\relax




% エラーと警告関係

\def\m@thpack@warning#1#2{%  #1:警告見出し #2:警告本文
  \begingroup%
  \newlinechar=10\relax%
  \message{Mathpack Warning: #1 at line \the\inputlineno^^J  #2^^J}%
  \endgroup%
}

\def\m@thpack@error#1#2{%  #1:エラー見出し #2:ヘルプメッセージ
  \begingroup%
  \newlinechar=10\relax%
  \errhelp{#2}%
  \errmessage{Mathpack Error: #1}%
  \endgroup%
}




%  タグ関係

\newcount\mathpacktagnumber%  数式番号用
\mathpacktagnumber=0\relax

\def\mathpacktag{\the\mathpacktagnumber}
%  数式タグの番号部分(例えば"(1)"の"1"の部分を想定)
%  各自カスタマイズ可能(\edefで展開可能なもの)

\def\mathpacktagstep{\global\advance\mathpacktagnumber by 1\relax}
%  数式番号を進める
%  数式番号の表示前に実行される
%  各自カスタマイズ可能

\def\mathpacktagtemplate#1{\noexpand\begingroup\noexpand\rm(#1)\noexpand\endgroup}
%  数式番号のテンプレート部分(例えば"(1)"の"("と")"の部分を想定)
%  #1には\mathpacktagが入る
%  各自カスタマイズ可能(\edefで展開可能なもの)

\def\mathpacklabeltemplate#1{eq.~#1}
%  数式番号の参照時のテンプレート部分(この定義では"(1)"を参照すると"eq. 1"と表示される)
%  #1には\mathpacktagが入る
%  各自カスタマイズ可能(\edefで展開可能なもの)




%  ラベル関係

%  参照名nameに対し
%  \m@thpack@label@body@nameは定義されていたら参照本体
%  \m@thpack@label@refed@nameは定義されていたら参照されたこと
%  を表す

\def\mathpacklabelset#1#2{%  参照名#1に参照本体#2を設定
  \expandafter\ifx\csname m@thpack@label@body@#1\endcsname\undefined%
  \else%
  \fi%
}

\def\mathpacklabelref#1{%  参照名#1を参照
  \global\expandafter\def\csname m@thpack@label@refed@#1\endcsname{}%
}




%  一般的なマクロ

\def\m@thpack@spacemacro{ }%  下の二つのコマンドの定義に使う

\expandafter\expandafter\expandafter\let\expandafter\expandafter\expandafter\m@thpack@space\expandafter\expandafter\expandafter%
=\expandafter\m@thpack@spacemacro\m@thpack@spacemacro%  空白文字のトークン (\m@thpack@spaceの定義)

\expandafter\def\expandafter\m@thpack@spacedel\m@thpack@spacemacro{}%  次の空白を一つ削除するマクロ (\m@thpack@spacedelの定義)




%%%%
%  \mathenv本体マクロ群 始まり

\def\mathenv{%
  \begingroup%  グルーピング開始
  \futurelet\@temptoken\m@thpack@mathenv@optcheck%  次のトークンを読み込む
}

\def\m@thpack@mathenv@optcheck{%
  \newif\if@prenobreak%  オプション変数の作成
  \newif\if@postnobreak%
  \begingroup%
    \ifx\@temptoken[%  オプションの有り無し判定
      \aftergroup\m@thpack@mathenv@opt%
    \else%
      \aftergroup\m@thpack@mathenv@body%
    \fi%
  \endgroup%
}

\def\m@thpack@mathenv@opt[#1]{%  オプション有りの場合  #1:オプションコマンド列
  \begingroup%
    \newif\if@prenobreak@read%  オプションを読み込み済みかの判定用
    \newif\if@postnobreak@read%
    \def\prenobreak{%
      \if@prenobreak@read%
        \m@thpack@error{'\noexpand\prenobreak'を二回以上書いている ('\noexpand\mathenv'のオプション引数部)}{'\prenobreak'は1回まで!!}%
      \else%
        \aftergroup\@prenobreaktrue%
        \@prenobreak@readtrue%
      \fi%
      \m@thpack@mathenv@optcommandcheck%
    }%
    \def\postnobreak{%
      \if@postnobreak@read%
        \m@thpack@error{'\noexpand\postnobreak'を二回以上書いている ('\noexpand\mathenv'のオプション引数部)}{'\postnobreak'は1回まで!!}%
      \else%
        \aftergroup\@postnobreaktrue%
        \@postnobreak@readtrue%
      \fi%
      \m@thpack@mathenv@optcommandcheck%
    }%
    \def\@checkend{\@checkend@body}%  チェックの終了を知らせる用
    \def\@checkend@body{}%
    \m@thpack@mathenv@optcommandcheck#1\@checkend%  この#1に\prenobreak, \postnobreakが入る
  \endgroup%
  \m@thpack@mathenv@body%
}

\def\m@thpack@mathenv@optcommandcheck{%
  \futurelet\@temptoken\m@thpack@mathenv@optcommandcheck@body%  次のトークンを読み込む
}

\def\m@thpack@mathenv@optcommandcheck@body{%
  \begingroup%
    \ifx\@temptoken\prenobreak%
    \else\ifx\@temptoken\postnobreak%
    \else\ifx\@temptoken\@checkend%
    \else\ifx\@temptoken\m@thpack@space%
      \aftergroup\expandafter%  空白ならば次の空白を削除したうえで\m@thpack@mathenv@optcommandcheckを実行
      \aftergroup\m@thpack@mathenv@optcommandcheck%
      \aftergroup\m@thpack@spacedel%
    \else%
      \m@thpack@error{不明なオプション ('\noexpand\mathenv'のオプション引数部)}{'\prenobreak', '\postnobreak'以外のオプションは書けません。^^Jタイプミスのチェックも忘れずに。}%
    \fi\fi\fi\fi%
  \endgroup%
}

\def\m@thpack@mathenv@body#1{%
  \def\envtype{\m@thpack@mathenv@envtype}%
  \m@thpack@mathenv@envtypecheck#1\envtype{@end}%
  \if@prenobreak%  オプションに応じてペナルティを設定
    \predisplaypenalty=\@M%
  \fi%
  \if@postnobreak%
    \postdisplaypenalty=\@M%
  \fi%
  \ifvmode%  余分な空白を削除する(具体的には数式のみの段落で空行が入るのを防ぐ)
    \nointerlineskip%
  \fi%
  $$%
    \openup\jot%
    \halign to \displaywidth{##\cr}%
  $$%
  \endgroup%  グルーピング終了
}

\def\m@thpack@mathenv@envtypecheck{%
  \futurelet\@temptoken\m@thpack@mathenv@envtypecheck@body%  次のトークンを読み込む 
}

\def\m@thpack@mathenv@envtypecheck@body{%  最初のトークンが\envtypeか確認
  \begingroup%
    \ifx\@temptoken\envtype%
    \else\ifx\@temptoken\m@thpack@space%
      \aftergroup\expandafter%  空白ならば次の空白を削除したうえで\m@thpack@mathenv@envtypecheckを実行
      \aftergroup\m@thpack@mathenv@envtypecheck%
      \aftergroup\m@thpack@spacedel%
    \else%
      \m@thpack@error{'\noexpand\mathenv'の本引数は'\noexpand\envtype'で始める必要がある ('\noexpand\mathenv'の本引数部)}{'\mathenv'の本引数は'\envtype'で始める必要があります。^^Jタイプミスのチェックも忘れずに。}%
    \fi\fi%
  \endgroup%
}

\def\m@thpack@mathenv@envtype{%
  \futurelet\@temptoken\m@thpack@mathenv@envtype@optcheck%  次のトークンを読み込む
}

\def\m@thpack@mathenv@envtype@optcheck{%
  \begingroup%
    \ifx\@temptoken[%  オプションの有り無し判定
      \aftergroup\m@thpack@mathenv@envtype@opt%
    \else%
      \aftergroup\m@thpack@mathenv@envtype@noopt%
    \fi%
  \endgroup%
}

\def\m@thpack@mathenv@envtype@opt[#1]#2{%
  \begingroup%
    \def\@disp{\@disp}%  #1との比較判定用
    \def\@multi{\@multi}%
    \def\@lines{\@lines}%
    \def\@align{\@align}%
    \expandafter\ifx\csname @#2\endcsname\@disp%
      \global\toks1={\def\@tempcmd##1\envtype{\m@thpack@disp{#1}{##1}\envtype}\@tempcmd}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
    \else\expandafter\ifx\csname @#2\endcsname\@multi%
      \global\toks1={\def\@tempcmd##1\envtype{\m@thpack@multi{#1}{##1}\envtype}\@tempcmd}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
    \else\expandafter\ifx\csname @#2\endcsname\@lines%
      \global\toks1={\def\@tempcmd##1\envtype{\m@thpack@lines{#1}{##1}\envtype}\@tempcmd}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
    \else\expandafter\ifx\csname @#2\endcsname\@align%
      \m@thpack@error{'\noexpand\envtype\noexpand{align\noexpand}'にオプション引数を付けてはいけない ('\noexpand\envtype'のオプション引数部)}{'\envtype{align}'にオプション引数を付けてはいけません。}%
    \else%
      \m@thpack@error{不明な環境名'#2' ('\noexpand\mathenv'の本引数部)}{そのような環境はありません。^^Jタイプミスのチェックも忘れずに。}%
    \fi\fi\fi\fi%
  \endgroup%
}

\def\m@thpack@mathenv@envtype@noopt#1{%
  \begingroup%
    \def\@disp{\@disp}%  #1との比較判定用
    \def\@multi{\@multi}%
    \def\@lines{\@lines}%
    \def\@align{\@align}%
    \expandafter\ifx\csname @#1\endcsname\@disp%
      \global\toks1={\def\@tempcmd##1\envtype{\m@thpack@disp{}{##1}\envtype}\@tempcmd}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
    \else\expandafter\ifx\csname @#1\endcsname\@multi%
      \global\toks1={\def\@tempcmd##1\envtype{\m@thpack@multi{}{##1}\envtype}\@tempcmd}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
    \else\expandafter\ifx\csname @#1\endcsname\@lines%
      \global\toks1={\def\@tempcmd##1\envtype{\m@thpack@lines{}{##1}\envtype}\@tempcmd}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
    \else\expandafter\ifx\csname @#1\endcsname\@align%
      \global\toks1={\def\@tempcmd##1{\def\@tempcmd####1\envtype{\m@thpack@align{##1}{####1}\envtype}\@tempcmd}\@tempcmd}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
    \else\expandafter\ifx\csname @#1\endcsname\@@end%
    \else%
      \m@thpack@error{不明な環境名'#1' ('\noexpand\mathenv'の本引数部)}{そのような環境はありません。^^Jタイプミスのチェックも忘れずに。}%
    \fi\fi\fi\fi\fi%
  \endgroup%
}

%  \mathenv本体マクロ群 終わり
%%%%

%%%%
%  \mathenv tag生成マクロ群 始まり

\def\m@thpack@tag#1{%
  \newif\if@tagexists%  タグを付けるかどうか
  \@tagexiststrue%  デフォルトではタグを付ける
  \newif\if@labelexists%  参照用ラベルを付けるかどうか
  \def\@tag{後日実装}%  タグの内容を入れる
  \begingroup%
    \def\tag##1{%
      \global\toks1={\def\@tag{##1}}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
      \m@thpack@tagcheck%
    }%
    \def\overtag##1{%
      \global\toks1={\def\@tag{##1}}%
      \aftergroup\the\aftergroup\toks\aftergroup1\aftergroup\relax%
      \m@thpack@tagcheck%
    }%
    \def\notag{%
      \aftergroup\@tagexistsfalse%
      \m@thpack@tagcheck%
    }%
    \def\label{%後日実装
    }%
    \def\overlabel{%後日実装
    }%
    \def\@checkend{\@checkend@body}%  チェックの終了を知らせる用
    \def\@checkend@body{}%
    \m@thpack@tagcheck#1\@checkend%
  \endgroup%
}

\def\m@thpack@tagcheck{%
  \futurelet\@temptoken\m@thpack@tagcheck@body%  次のトークンを読み込む
}

\def\m@thpack@mathenv@tagcheck@body{%
  \begingroup%
    \ifx\@temptoken\tag%
    \else\ifx\@temptoken\overtag%
    \else\ifx\@temptoken\notag%
    \else\ifx\@temptoken\label%
    \else\ifx\@temptoken\overlabel%
    \else\ifx\@temptoken\@checkend%
    \else\ifx\@temptoken\m@thpack@space%
      \aftergroup\expandafter%  空白ならば次の空白を削除したうえで\m@thpack@mathenv@tagcheckを実行
      \aftergroup\m@thpack@mathenv@tagcheck%
      \aftergroup\m@thpack@spacedel%
    \else%
      \m@thpack@error{不明なオプション (数式タグオプション)}{入力された名前のオプションはありません。^^Jタイプミスのチェックも忘れずに。}%
    \fi\fi\fi\fi\fi\fi\fi%
  \endgroup%
}

%  \mathenv tag生成マクロ群 終わり
%%%%

%%%%
%

% 注意事項
% \mathsurrund の除去と再挿入
% shortバージョンの動作
% \lineskip 等の設定

\def\m@thpack@disp#1#2{%
  \m@thpack@tagoptionset{#1}%
}

\def\m@thpack@disp#1#2{%
  disp:#1:#2:%
}

\def\m@thpack@multi#1#2{%
  multi:#1:#2:%
}

\def\m@thpack@lines#1#2{%
  lines:#1:#2:%
}

\def\m@thpack@align#1#2{%
  align:#1:#2:%
}

\catcode`@=12%  @のカテゴリーコードを通常に戻す
